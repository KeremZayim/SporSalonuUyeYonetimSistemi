<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEWJ4gBTj9gEO4boKjSD7G0wgu+tMoTx4DSG
        8v4tgvP/LYL0/zSF8f4vet/gLHHUrzB00m81dc4qUoDBBEF5yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEmM4ABVktoEOYbqODGC75cugvLfLYLz+yyC
        9P8sgvT/LIL0/yyC9P8sgfP/KXnm/yhx2v8ocdn/KXHY+ypx198uctSYNXbROFCDwgRFfccAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHWf1AAnfe8AQIjmGjKD7okugvLqLIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIHz/yp55f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8qcdfqL3LTiTp4
        zRohatYAbJe7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjmdQAAFX/ADmF6jYwgvDDLILz/iyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyB8/8peeb/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx
        2f8ocdn+K3LVwjV2zzcAOP8AYI25AAAAAAAAAAAAAAAAAAAAAAAAAAAAYZnTAABn/wA4helBLoLx2SyC
        8/8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgfP/Knnl/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx
        2f8ocdn/KHHZ/yhx2f8ocdn/K3HW2TN00EIAVO0AW4nCAAAAAAAAAAAAAAAAAH+izwAnf+8AOIbpNi6C
        8NgsgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIHz/yp55f8ocdr/KHHZ/yhx2f8ocdn/KHHZ/yhx
        2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/K3HX2TV1zzclbdUAf5u3AAAAAAAAAAAAOobpAD+I
        5hswgvDCLIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyB8/8qeeb/KHHZ/yhx2f8ocdn/KHHZ/yhx
        2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/K3LVwjl4zRs1ds8AAAAAAEqN
        4ABsmskCMoPuiS2C8/8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgfP/KXnl/yhx2f8ocdn/KHHZ/yhx
        2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/LnPUimiN
        swNIf8kAMILtADiF6jkugvLpLIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIHz/yp55f8ocdn/KHHZ/yhx
        2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx
        2f8qcdfqNHbROSxy0gB5nsMDMYPvlyyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyB8/8qeeb/KHHa/yhx
        2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx
        2f8ocdn/KHHZ/yhx2f8tctWYboyxAzmF5yougvLeLIL0/yyC9P8sgvT/LIL0/yyC9P8sgfP/KXjl/ytz
        2f8rc9n/J3DZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/J3DZ/yxz2f8qctn/J3DZ/yhx
        2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/ylx1940dM4qMoLsbCyC8/ssgvT/LIL0/yyC9P8sgvT/K4Hz/yp5
        5f9Oit3/kLbm/5C15v9Kh9z/JnDZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KHHZ/ydw2f9Tjt3/krfm/420
        5f9Fg9v/KXHZ/ydw2P8ocdn/KHHZ/yhx2f8ocdn/KHHZ+y5z0m4vgu+tLIL0/yyC9P8sgvT/LIL0/zKF
        8/94rO//kbbm/7XO6/9bkd7/YJXf/4St5P8mcNn/KHHZ/yhx2f8ocdn/KHHZ/yhx2f8ocdn/KXHZ/460
        5v9Ujd3/aJvf/7PM6/+Pteb/bZ7h/ypz2f8ocdn/KHHZ/yhx2f8ocdn/LHLTri6C8NosgvT/LIL0/yyC
        9P8pgPT/Upbw/5G35/9Cgdv/nb7p/0WD3f9Jhtz/hq/l/yRu2f8mb9n/Jm/Z/yZv2f8mb9n/Jm/Z/yZv
        2f8ocNn/jbTm/zx+2/9Tjd3/lbnn/0KC2/+Xuuf/QoPb/yZw2P8ocdn/KHHZ/yhy2v8teOHaMoTx+SyC
        9P8sgvT/KoH0/0yV8v+ryu7/h7Dk/yRu2P+Jseb/RoTd/0mG3P+cvef/Vo/d/1eP3v9Xj97/V4/e/1eP
        3v9Xj97/V4/e/1mR3f+gwOj/PH7b/1SO3f9+quT/JG7Y/5a56P+lw+n/Sofc/yZw2f8octr/Knrn/zCD
        8fYtgvT/LIL0/yyC9P8pgPT/b6rz/5q85/9/q+T/Jm/Y/4qx5/9GhN3/SIbc/7DK6/97qOP/e6jj/3uo
        4/97qOP/e6jj/3uo4/97qOP/fanj/67J6/88ftv/VI7d/3+r5P8mb9j/ibHm/4+z5f9vn+L/JXDZ/yp6
        5/8sgvP/LIPz/y6C9P8sgvT/LIL0/ymA9P9vqfT/mrzn/3+r5P8mb9j/irHn/0aE3f9Jhtz/sMvr/3uo
        4/97qOP/e6jk/3up5f97qeX/e6nl/3up5f99quX/rsnr/zt+2/9Ujt3/f6vk/yZv2P+Jseb/jrTl/2+f
        4/8neOb/LIL0/yyC9P8tg/P/MYTx9yyC9P8sgvT/KoH0/02U8v+szPL/h7Dl/yRu2P+JsOb/RoTd/0mH
        3P+cvef/Vo/c/1eT4v9am/D/W5zz/1uc8/9bnPP/W5zz/12e8/+hxfD/PH7b/1SO3f9+quT/JG7Y/5a5
        6P+lw+r/TJDq/yqA8/8sgvT/LIL0/zGE8fgugvDZLIL0/yyC9P8sgvT/KYD0/1KY8/+RuOj/QoHa/56+
        6f9Eg93/SYbc/4Wv5f8lctz/KH3t/ymA9P8pgPT/KYD0/ymA9P8pgPT/LIH0/5C68P88ftv/U43d/5W5
        5/9Cgdv/l7vo/0SL6f8qgPP/LIL0/yyC9P8sgvT/L4Lw2i+C760sgvT/LIL0/yyC9P8sgvT/MYXz/3iu
        8f+SvPD/tdHx/1qR3v9fld7/hLDo/yl97v8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8tgvT/kLvw/1SN
        3f9omt//tM/w/5G78P9vqfD/L4Pz/yyC9P8sgvT/LIL0/yyC9P8wgu+sMoPsbCyC8/ssgvT/LIL0/yyC
        9P8sgvT/K4H0/y2C9P9Rl/L/krzv/5G87v9OlfL/K4H0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yuB
        9P9Wm/L/lL3v/5C78P9IkvH/LYL0/yuB8/8sgvT/LIL0/yyC9P8sgvT/LYLz+zOD7Gw5hegqLoLy3iyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yuB9P8vg/T/L4Pz/yuB9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LIL0/yuB9P8whPP/L4Pz/yuB9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8ugvLeOobnKm2Y
        xgIxgu+WLIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/zGC
        75dymsYDMYLtADiF6jgugvLpLIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8ugvLpOYbqODGC7QBKjeAAa5nGAjKD7ogtgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LILz/zKD7Ylvm8gDTI7fAAAAAAA7hucAQIjkGjCC8MEsgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC8/8wgvDCQIjmGzqG6QAAAAAAAAAAAICmzwApfvEAOYXpNi+C8NgsgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LoLx2TmF6jYof/AAhabNAAAAAAAAAAAAAAAAAGGY1AAAa/8AOIXoQS+C
        8dksgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/y+C8dk3helBAGv/AGKY2QAAAAAAAAAAAAAAAAAAAAAAAAAAAGWa
        zgAAU/8AOYbqNjCC8MIsgvP+LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/y2C8/4wgvDDOobpNgBN/wBnm9MAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGma0gAugO4AQYflGjKD7oktgvLqLIL0/yyC9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC9P8ugvLqMoPuiT+I5xokffAAd53VAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEi+AAT5DXAziF6jcxgu+XLYLx3yyC8/ssgvT/LIL0/yyC
        9P8sgvT/LIL0/yyC9P8sgvT/LIL0/yyC8/sugvHfMYPulziG6jhTkNoDSIvgAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ4fhAFKO2QQ4hucpMoPsbDCC
        760ugfDZL4Px9S6D8/8ugvT/L4Px9S6B8NkwgvCtMoPsbDqF5ypYktUESIrhAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>